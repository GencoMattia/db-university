1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
    SELECT `students`.`name` AS "nome",  `students`.`surname` AS "cognome", `students`.`registration_number` AS "codice_matricola"
    FROM `students` 
    INNER JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
    WHERE `degrees`.`name` = "Corso di Laurea in Economia";

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
    SELECT `degrees`.`name` AS "nome_corso_laurea", `departments`.`name` AS "nome_dipartimento"
    FROM `degrees`
    INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
    WHERE `departments`.`name` = "Dipartimento di Neuroscienze" AND `degrees`.`level` = "magistrale";

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
    SELECT `courses`.`name` AS "nome_corso", `teachers`.`name` AS "nome_docente", `teachers`.`surname` AS "cognome_docente", `teachers`.`id`
    FROM `course_teacher`
    INNER JOIN `courses` ON `courses`.`id` = `course_teacher`.`course_id`
    INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`
    WHERE `teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
    SELECT `students`.`surname` AS "cognome_studente", `students`.`name` AS "nome_studente", `degrees`.`name` AS "nome_corso_laurea", `departments`.`name` AS "nome_dipartimento" 
    FROM `students`
    INNER JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id`
    INNER JOIN `departments` ON `departments`.`id` = `degrees`.`id`
    ORDER BY `students`.`surname` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
    SELECT `degrees`.`name` AS "nome_corso_laurea", `courses`.`name` AS "nome_corso", `teachers`.`surname` AS "cognome_insegnante",`teachers`.`name` AS "nome_insegnante"
    FROM `courses`
    INNER JOIN `degrees` ON `degrees`.`id` = `courses`.`degree_id`
    INNER JOIN `course_teacher` ON `course_teacher`.`course_id` = `courses`.`id`
    INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`
    ORDER BY `degrees`.`name` ASC;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
    SELECT DISTINCT `teachers`.`surname` AS "cognome_insegnante",`teachers`.`name` AS "nome_insegnante", `teachers`.`id` AS "id_docente", `departments`.`name` AS "nome_dipartimento"
    FROM `teachers`
    INNER JOIN `course_teacher` ON `course_teacher`.`teacher_id` = `teachers`.`id`
    INNER JOIN `courses` ON `courses`.`id` = `course_teacher`.`course_id`
    INNER JOIN `degrees` ON `degrees`.`id` = `courses`.`degree_id`
    INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
    WHERE `departments`.`name` = "Dipartimento di Matematica"
    ORDER BY `teachers`.`surname` ASC;

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.
    SELECT `students`.`surname` AS "cognome_studente",  `students`.`name` AS "nome_studente", `students`.`registration_number` AS "codice_matricola", `courses`.`name` AS "nome_esame", COUNT(`exam_student`.`exam_id`) AS "n_tentativi", MAX(`exam_student`.`vote`) AS "voto_massimo"
    FROM `exam_student` 
    INNER JOIN `students` ON `students`.`id` = `exam_student`.`student_id`
    INNER JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
    INNER JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
    GROUP BY cognome_studente, nome_studente, codice_matricola, nome_esame
    HAVING voto_massimo >= 18
    ORDER BY `students`.`surname` ASC;